Q.Functional Programming


Calculate the following using Lambda calculus:
T AND F
b. 3 * 4



Q.Lambda functions

Write a lambda function to convert measurements from meters to feet.
Write a lambda function in Python to implement the following lambda expression:
(𝜆𝑓. 𝜆𝑚. (𝑓 + 𝑚)𝑎)(𝜆𝑥. 𝑥2)(𝑏)
Note: You need to write a nested lambda function for implementing f+m where f takes the square function (which takes argument x) passed as a parameter. The above expression calculates a2+b.


Q.Passing and returning a function as an argument


Define a function ‘square’ for squaring a number. Define a function named ‘twice’ that takes a function f as an argument and returns f(f(x)). Using ‘twice’ and ‘square’ create a function ‘quad’ that takes n as an argument and returns n4. ‘quad’ should not be defined explicitly. It should only be created as a variable which is then assigned a function.


Q.Closure
A Closure is a function object that remembers values in enclosing scopes even if they are not present in memory. We have a closure in Python when a nested function references a value in its enclosing scope.
Study the following program by executing it:


In a lottery system, random number is chosen by retrieving the number from a random index from a list of random numbers. Write a program to choose a random number in this way. You must use nested functions – the inner function chooses a number from a random index and the outer function generates a random list of numbers. The outer function takes n as a parameter where is the maximum number that can be put in the random list. (Your code should be similar to the program in 5a)


Q.Map
A secret message needs to be sent. Use the map function to encrypt the message using Caesar cipher.


Q.Reduce
Given runs scored by 2 players in a series of matches, write a Python program using reduce function to find who is the better player of the two in terms of maintaining consistency. (You need to find SD).


Q.Filter
The marks scored by a class of students in 5 different subjects are stored in a list of lists. Using the filter function, write a program to find the students who failed in one or more subjects.
Map+reduce+filter
Given two trending topics and a bunch of tweets, write a Python program to count the number of tweets that contain each topic. You need to do this by putting together map(), reduce() and filter() functions.




#Q1 a)
time = lambda f: 1/f
freq = 560 #hz
print(time(freq)) 


output: 0.0017857142857142857 


#Q1 b)
calc = lambda a, b: a*b
print(calc(3,4))


output:12






#Q2
#a
feet = lambda m: m*(3.281)
meters = int(input("Enter the number of meters to be converted: "))
print("{:0.2f} feet".format(feet(meters)))


output: 16.41 feet 


#Q2
#b
square = lambda x: x**2
total = lambda f, b: lambda a: f(a)+b
a = int(input("Enter value for a: "))
b = int(input("Enter value for b: "))
print(total(square, b)(a))


output:32






#Q3
def square(n):
    n = n**2
    return n


def twice(f):
    return square(f)


n = int(input("Enter a number: "))
quad = twice(square(n))
print(quad)


output:2401




#Q4
#a
def multiplier_of(n):
    def multiplier(number):
        return number*n
    return multiplier


multiplywith5 = multiplier_of(5)
print(multiplywith5(9))


output:45


#Q4
#b
import random
def outer(n):
    lst = random.sample(range(0,n+1), n)
    def inner():
        ind = random.randrange(0, n)
        return lst[ind]
    return inner


n = int(input("Enter a random number: "))
pick_number = outer(n)
print("Random number generated is: {}".format(pick_number()))


output: Random number generated is: 2 


#Q6
def encrypt(letter, s):
    if (letter.isupper()):
        return chr((ord(letter) + s - 65) % 26 + 65)
    elif (letter.islower()):
        return chr((ord(letter) + s - 97) % 26 + 97)
    else:
        return letter


text = input("Enter the word: ")
s = int(input("Enter the shift: "))
shift = [s] * len(text)
result = list(map(encrypt, text, shift))


print("Encrypted text: ", end="")
for i in result:
    print(i, end="")


output: Encrypted text: 4






#Q7
import functools
import operator


player1 = [100, 20, 50, 66, 72, 32]
player2 = [56, 65, 78, 45, 33, 69]


mean1 = (functools.reduce(operator.add, player1)) / len(player1)
mean2 = (functools.reduce(operator.add, player2)) / len(player2)


m1 = [mean1] * len(player1)
m2 = [mean2] * len(player2)


def variance(p, m):
    var = p - m
    return var**2
    
sqvar1 = list(map(variance, player1, m1))
sqvar2 = list(map(variance, player2, m2))


var1 = (functools.reduce(operator.add, sqvar1)) / len(sqvar1)
var2 = (functools.reduce(operator.add, sqvar2)) / len(sqvar2)


sd1 = var1**0.5
sd2 = var2**0.5


if sd1 == sd2:
    print("Both players are consistent.")
elif sd1 > sd2:
    print("Player 2 is more consistent.")
else:
    print("Player 1 is more consistent.")


output: Player 2 is more consistent. 






#Q8
marks = [[88, 77, 66, 77, 99],[56, 78, 31, 35, 54],[53, 71, 64, 56, 14]]


def fail(marks):
    for i in marks:
        if i < 40:
            return True


result = filter(fail, marks)
res = list(result)
for i in range(0, len(marks)):
    if marks[i] in res:
        print("Student #{} failed in at least one subject.".format(i+1))




output: Student #2 failed in at least one subject. 
Student #3 failed in at least one subject.






#Q9
import functools
import operator


tweets = ["First ever player to score 6000 runs in #IPL - Just another day at the ‘office’ for #ViratKohli!",
          "My ⁦@rajasthanroyals outfit has arrived! Now to be well enough to wear it....Thanks ⁦@IamSanjuSamson & the RR management! All the best for the rest of the #IPL!",
         "How amazing that both the centuries in this year’s #IPL have been scored by Malayalis, when Kerala has so long been regarded as a cricketing backwater!",
         "Most 10-wicket wins in IPL: 4 - RCB, 2 - MI, 2 - SRH, 2 - CSK #RCBvsRR #RCB #RR #IPL #IPL2021 #CricTracker",
         "India would have never eliminated polio, if people had to BUY polio vaccines. Same logic applies for #COVID19",
         "The Ontario Science Table @COVIDSciOntario has recommended that 50% of all available vaccines go to hotspot neighbourhoods with the highest rates of #COVID19. RT if you agree the Ontario government should immediately do this to save lives.",
         "UPA home minister resigned after terror attack on Mumbai. Why doesn’t NDA health minister resign for this #COVID19 mess? I would prefer Modi to resign as buck stops at him.But being thick skinned, he won’t!",
         "Khalsa Aid India arranges Oxygen concentrators for COVID-19 patients, will deliver them in Delhi. #COVID19"]


ipl = ["#ipl"] * len(tweets)
covid = ["#covid19"] * len(tweets)


def segregate_tweets(lst, topic):
    if topic in lst.lower():
        return lst


resultipl = list(map(segregate_tweets, tweets, ipl))
resultcovid = list(map(segregate_tweets, tweets, covid))


def filter_list(lst):
    if lst != "":
        return lst


result_ipl = list(filter(filter_list, resultipl))
result_covid = list(filter(filter_list, resultcovid))


print("IPL tweets: {}".format(len(result_ipl)))
print("COVID19 tweets: {}".format(len(result_covid)))


Output:


IPL tweets: 4 COVID19 tweets: 4